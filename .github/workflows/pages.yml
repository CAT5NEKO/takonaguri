name: PR CI

on:
  pull_request:
    types:
      - opened
      - synchronize

jobs:
  check:
    runs-on: ubuntu-latest

    steps:
      - name: Display PR Title
        run: |
          PR_TITLE=$(jq --raw-output .pull_request.title "$GITHUB_EVENT_PATH")
          echo "PR Title: $PR_TITLE"

      - name: Check for skip keyword
        run: |
          PR_TITLE=$(jq --raw-output .pull_request.title "$GITHUB_EVENT_PATH")
          if [[ "$PR_TITLE" == *"TAKO"* ]]; then
            echo "Skipping CI for pull request with 'TAKO' keyword."
            exit 78
          fi

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Display Directory Contents
        run: |
          echo "Directory Contents:"
          ls -R

      - name: Install dependencies (Go)
        if: ${{ contains(github.event_name, 'pull_request') && contains(github.event_path, 'go.mod') }}
        run: go mod download

      - name: Install dependencies (Python)
        if: ${{ contains(github.event_name, 'pull_request') && contains(github.event_path, 'requirements.txt') }}
        run: pip install -r requirements.txt

      - name: Install dependencies (JavaScript)
        if: ${{ contains(github.event_name, 'pull_request') && contains(github.event_path, 'package.json') }}
        run: npm install

      - name: Install dependencies (Rust)
        if: ${{ contains(github.event_name, 'pull_request') && contains(github.event_path, 'Cargo.toml') }}
        run: cargo build --verbose

      - name: Lint code (Go)
        if: ${{ contains(github.event_name, 'pull_request') && contains(github.event_path, 'go.mod') }}
        run: |
          echo "Linting code (Go) - Start"
          go fmt ./... && go vet ./...
          echo "Linting code (Go) - End"

      - name: Lint code (Python)
        if: ${{ contains(github.event_name, 'pull_request') && contains(github.event_path, 'requirements.txt') }}
        run: pylint .

      - name: Lint code (JavaScript)
        if: ${{ contains(github.event_name, 'pull_request') && contains(github.event_path, 'package.json') }}
        run: eslint .

      - name: Lint code (Rust)
        if: ${{ contains(github.event_name, 'pull_request') && contains(github.event_path, 'Cargo.toml') }}
        run: cargo fmt -- --check

      - name: Congratulate and Close Pull Request if lint passes
        if: success()
        run: |
          PR_NUMBER=$(jq --raw-output .pull_request.number "$GITHUB_EVENT_PATH")
          API_URL="https://api.github.com/repos/${GITHUB_REPOSITORY}/issues/${PR_NUMBER}/comments"
          TOKEN=${{ secrets.GITHUB_TOKEN }}

          echo "Congratulations! Linting passed. üêàüéâ"
          curl -X POST -H "Authorization: Bearer $TOKEN" -H "Content-Type: application/json" $API_URL -d '{"body":"Congratulations! Linting passed. üêàüéâ"}'

          echo "Closing Pull Request..."
          curl -X PATCH -H "Authorization: Bearer $TOKEN" -H "Content-Type: application/json" "https://api.github.com/repos/${GITHUB_REPOSITORY}/pulls/$PR_NUMBER" -d '{"state":"closed"}'
